gam.check(M3)
AllThetas <- c(0.1, 0.2, 0.3, 0.4, 0.6, 1, 2, 5, 10)
AICs <- vector(length = 9)
i <- 1
for (MyTheta in AllThetas) {
M1 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random =~ (1 + year| id),
family = negbin(theta = MyTheta),
data = dataS)
AICs[i] <- AIC(M1$mer)  #<---
i <- i + 1
}
# And plot the results
plot(x = AllThetas,
y = AICs,
xlab = "Theta value in NB GAMM",
ylab = "AIC",
cex.lab = 1.5,
type = "l"
)
#thetan voisi arvioida sovittamalla mallin GAM:lla eli random tekijä smootheriksi. Mutta mikä malli tässä pitäisi olla? Monimutkaisin?
M6 <- gam(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)) + s(id, bs="re") + s(year,id, bs="re"), family = nb(),data = dataS)
#thetan voisi arvioida sovittamalla mallin GAM:lla eli random tekijä smootheriksi. Mutta mikä malli tässä pitäisi olla? Monimutkaisin?
M6 <- gam(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)) + s(id, bs="re") + s(year,id, bs="re"), family = nb(),data = dataS)
summary(M6)
Theta <- M6$family$getTheta(TRUE)
# If you want then you can run M4 again with the optimal theta.
M7 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random = ~(1 + year|id),
family = negbin(theta = Theta),
data = dataS)
# M6 and M4 should now give similar results.
summary(M6)
summary(M7$gam)
summary(M7$mer)
gam.vcomp(M6)
Theta
M8 <- gam(terri ~ year + offset(log(area)) + s(id, bs="re") + s(year,id, bs="re"), family = nb(), data = dataS)
summary(M8)
Theta2 <- M8$family$getTheta(TRUE)
# If you want then you can run M4 again with the optimal theta.
M9 <- gamm4(terri ~ year + offset(log(area)),
random = ~(1 + year|id),
family = negbin(theta = Theta2),
data = dataS)
Theta2
#varsinaiset mallit, joissa theta arvioitu gam-mallin avulla
G1=gamm4(terri ~ year + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G2=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G3=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X)+ year*temp + year*prec + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G4=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*shan + year*open + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G5=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shan + year*open + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
AIC(G1$mer, G2$mer, G3$mer, G4$mer, G5$mer)
anova(G1$mer, G2$mer, G3$mer, G4$mer, G5$mer)
AIC(G1$mer, G2$mer, G3$mer, G4$mer, G5$mer)
anova(G1$mer, G2$mer, G3$mer, G4$mer, G5$mer)
summary(G3$gam)
summary(G3$mer)
plot(G3$gam)
#Check dispersion parameter
p <- sum(G3$gam$edf) + 1 + 1 #theta and sigma id,  MITÄ TÄHÄN PITÄISI KIRJATA, tuleeko crossed random effectseistä vielä yksi degree of freedom lisää? vielä yksi +1?
N <- nrow(dataS)
E4 <- resid(G3$mer, type = "pearson")
Overdisp <- sum(E4^2) / (N - p)
Overdisp
#Plot residuals vs ...
plot(x = dataS$X,
y = E4,
xlab = "X",
ylab = "Pearson residuals")
abline(h = 0, lty = 2)
#Plot residuals vs ...
plot(x = dataS$Y,
y = E4,
xlab = "Y",
ylab = "Pearson residuals")
abline(h = 0, lty = 2)
#Is there a non-linear pattern in here?
T1 <- gam(E4 ~ s(Y), data = dataS)
summary(T1)
plot(T1)
abline(h = 0, lty = 2)
G1=gamm(terri ~ year, offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
G2=gamm(terri ~ SSS + agri5*year + s(Y,bs="cr") + s(X,bs="cr") + year, offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
G3=gamm(terri ~ SSS + agri5*year + s(Y,bs="cr") + s(X,bs="cr")+ year*temp + year*prec , offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
G4=gamm(terri ~ SSS + agri5*year + s(Y,bs="cr") + s(X,bs="cr") + year*shan + year*open, offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
G5=gamm(terri ~ SSS + agri5*year + s(Y,bs="cr") + s(X,bs="cr") + year*temp + year*prec + year*shan + year*open, offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
#Check dispersion parameter
p <- sum(G3$gam$edf) + 1 + 1 #theta and sigma id,  MITÄ TÄHÄN PITÄISI KIRJATA, tuleeko crossed random effectseistä vielä yksi degree of freedom lisää? vielä yksi +1?
N <- nrow(dataS)
E4 <- resid(G3$mer, type = "pearson")
Overdisp <- sum(E4^2) / (N - p)
Overdisp
#Plot residuals vs ...
plot(x = dataS$X,
y = E4,
xlab = "X",
ylab = "Pearson residuals")
abline(h = 0, lty = 2)
#Plot residuals vs ...
plot(x = dataS$Y,
y = E4,
xlab = "Y",
ylab = "Pearson residuals")
abline(h = 0, lty = 2)
#Is there a non-linear pattern in here?
T1 <- gam(E4 ~ s(Y), data = dataS)
AIC(G1$lme, G2$lme, G3$lme, G4$lme, G5$lme)
summary(G4$gam)
summary(G4$mer)
plot(G4$gam)
#varsinaiset mallit, joissa theta arvioitu gam-mallin avulla
G1=gamm4(terri ~ year + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G2=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G3=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X)+ year*temp + year*prec + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G4=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*shanG + year*open + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G5=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
AIC(G1$mer, G2$mer, G3$mer, G4$mer, G5$mer)
anova(G1$mer, G2$mer, G3$mer, G4$mer, G5$mer)
summary(G3$gam)
summary(G3$mer)
plot(G3$gam)
#Check dispersion parameter
p <- sum(G3$gam$edf) + 1 + 1 #theta and sigma id,  MITÄ TÄHÄN PITÄISI KIRJATA, tuleeko crossed random effectseistä vielä yksi degree of freedom lisää? vielä yksi +1?
N <- nrow(dataS)
E4 <- resid(G3$mer, type = "pearson")
Overdisp <- sum(E4^2) / (N - p)
Overdisp
#Plot residuals vs ...
plot(x = dataS$X,
y = E4,
xlab = "X",
ylab = "Pearson residuals")
abline(h = 0, lty = 2)
#Plot residuals vs ...
plot(x = dataS$Y,
y = E4,
xlab = "Y",
ylab = "Pearson residuals")
abline(h = 0, lty = 2)
#Is there a non-linear pattern in here?
T1 <- gam(E4 ~ s(Y), data = dataS)
summary(T1)
plot(T1)
abline(h = 0, lty = 2)
G1=gamm(terri ~ year, offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
G2=gamm(terri ~ SSS + agri5*year + s(Y,bs="cr") + s(X,bs="cr") + year, offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
G3=gamm(terri ~ SSS + agri5*year + s(Y,bs="cr") + s(X,bs="cr")+ year*temp + year*prec , offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
G4=gamm(terri ~ SSS + agri5*year + s(Y,bs="cr") + s(X,bs="cr") + year*shanG + year*open, offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
G5=gamm(terri ~ SSS + agri5*year + s(Y,bs="cr") + s(X,bs="cr") + year*temp + year*prec + year*shanG + year*open, offset=log(area), random= list(id=~1+year), family=nbinom2, data=dataS)
AIC(G1$lme, G2$lme, G3$lme, G4$lme, G5$lme)
summary(G4$gam)
summary(G4$mer)
plot(G4$gam)
summary(G2$gam)
summary(G2$mer)
plot(G2$gam)
getwd()
paketit<-c("readr","tidyr","plyr","dplyr","vegan","ggplot2","lattice","psych","glmmTMB","lme4","MASS","MuMIn","mgcv","gamm4")
lapply(paketit,library,character.only=T)
data<-read.csv("OrtolanBunting.csv")
names(data)
str(data)
summary(data)
#tarkasta kaikkien luokkien muoto
data$id<-as.factor(data$id)
#vuodelle oma faktori-muuttuja
data$fyear<-as.factor(data$year)
dataS=data %>%mutate_at(c(2:3,5:7,9:14,20:21), funs(c(scale(.))))
M1=glmmTMB(terri ~ year + (1|fyear)+ (1|id), family=nbinom2, data=dataS, REML=FALSE)
M2=glmmTMB(terri ~ SSS + agri5 + X*Y + year + (1|fyear) + (1|id), family=nbinom2, data=dataS, REML=FALSE)
M3=glmmTMB(terri ~ SSS + agri5 + X*Y + year*temp + year*prec  + (1|fyear)  + (1|id), family=nbinom2, data=dataS, REML=FALSE)
M4=glmmTMB(terri ~ SSS + agri5 + X*Y + year*shanG + year*open + (1|fyear) + (1|id), family=nbinom2, data=dataS, REML=FALSE)
M5=glmmTMB(terri ~ SSS + agri5 + X*Y + year*temp + year*prec + year*shanG + year*open + (1|fyear) + (1|id), family=nbinom2, data=dataS, REML=FALSE)
output1<-model.sel(M1,M2,M3,M4,M5)
# AICc Table
output1
#reviirien tiheys
dataS$terriD=dataS$terri/dataS$area
summary(dataS$terriD)
AllThetas <- c(0.1, 0.2, 0.3, 0.4, 0.6, 1, 2, 5, 10)
AICs <- vector(length = 9)
i <- 1
for (MyTheta in AllThetas) {
M1 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random =~ (1 + year| id),
family = negbin(theta = MyTheta),
data = dataS)
AICs[i] <- AIC(M1$mer)  #<---
i <- i + 1
}
AllThetas <- c(0.1, 0.5, 1, 2, 5, 10,20)
AICs <- vector(length = 9)
i <- 1
for (MyTheta in AllThetas) {
M1 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random =~ (1 + year| id),
family = negbin(theta = MyTheta),
data = dataS)
AICs[i] <- AIC(M1$mer)  #<---
i <- i + 1
}
# And plot the results
plot(x = AllThetas,
y = AICs,
xlab = "Theta value in NB GAMM",
ylab = "AIC",
cex.lab = 1.5,
type = "l"
)
getwd()
paketit<-c("readr","tidyr","plyr","dplyr","vegan","ggplot2","lattice","psych","glmmTMB","lme4","MASS","MuMIn","mgcv","gamm4")
lapply(paketit,library,character.only=T)
data<-read.csv("OrtolanBunting.csv")
names(data)
str(data)
summary(data)
#tarkasta kaikkien luokkien muoto
data$id<-as.factor(data$id)
#vuodelle oma faktori-muuttuja
data$fyear<-as.factor(data$year)
dataS=data %>%mutate_at(c(2:3,5:7,9:14,20:21), funs(c(scale(.))))
M1=glmmTMB(terri ~ year + (1|fyear)+ (1|id), family=nbinom2, data=dataS, REML=FALSE)
M2=glmmTMB(terri ~ SSS + agri5 + X*Y + year + (1|fyear) + (1|id), family=nbinom2, data=dataS, REML=FALSE)
M3=glmmTMB(terri ~ SSS + agri5 + X*Y + year*temp + year*prec  + (1|fyear)  + (1|id), family=nbinom2, data=dataS, REML=FALSE)
M4=glmmTMB(terri ~ SSS + agri5 + X*Y + year*shanG + year*open + (1|fyear) + (1|id), family=nbinom2, data=dataS, REML=FALSE)
M5=glmmTMB(terri ~ SSS + agri5 + X*Y + year*temp + year*prec + year*shanG + year*open + (1|fyear) + (1|id), family=nbinom2, data=dataS, REML=FALSE)
output1<-model.sel(M1,M2,M3,M4,M5)
# AICc Table
output1
#reviirien tiheys
dataS$terriD=dataS$terri/dataS$area
summary(dataS$terriD)
#reviirien tiheys
dataS$terriD=dataS$terri/dataS$area
summary(dataS$terriD)
AllThetas <- c(0.1, 0.5, 1, 2, 5, 10,20)
AICs <- vector(length = 9)
i <- 1
for (MyTheta in AllThetas) {
M1 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random =~ (1 + year| id),
family = negbin(theta = MyTheta),
data = dataS)
AICs[i] <- AIC(M1$mer)  #<---
i <- i + 1
}
AllThetas <- c(0.1, 0.5, 1, 5, 10,20)
AICs <- vector(length = 6)
i <- 1
for (MyTheta in AllThetas) {
M1 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random =~ (1 + year| id),
family = negbin(theta = MyTheta),
data = dataS)
AICs[i] <- AIC(M1$mer)  #<---
i <- i + 1
}
for (MyTheta in AllThetas) {
M1 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random =~ (1 + year| id),
family = negbin(theta = MyTheta),
data = dataS)
AICs[i] <- AIC(M1$mer)  #<---
i <- i + 1
}
plot(x = AllThetas,
y = AICs,
xlab = "Theta value in NB GAMM",
ylab = "AIC",
cex.lab = 1.5,
type = "l"
)
View(dataS)
M1 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random =~ (1 + year| id),
family = negbin(theta = MyTheta),
data = dataS)
AllThetas <- c(0.1, 0.5, 1, 5, 10,20)
AICs <- vector(length = 6)
i <- 1
for (MyTheta in AllThetas) {
M1 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random =~ (1 + year| id),
family = negbin(theta = MyTheta),
data = dataS)
AICs[i] <- AIC(M1$mer)  #<---
i <- i + 1
}
# A
plot(x = AllThetas,
y = AICs,
xlab = "Theta value in NB GAMM",
ylab = "AIC",
cex.lab = 1.5,
type = "l"
)
MyTheta
#thetan voisi arvioida sovittamalla mallin GAM:lla eli random tekijä smootheriksi. Mutta mikä malli tässä pitäisi olla? Monimutkaisin?
M6 <- gam(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)) + s(id, bs="re") + s(year,id, bs="re"), family = nb(),data = dataS)
summary(M6)
Theta <- M6$family$getTheta(TRUE)
# If you want then you can run M1 again with the optimal theta.
M7 <- gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)),
random = ~(1 + year|id),
family = negbin(theta = Theta),
data = dataS)
# M6 and M4 should now give similar results.
summary(M6)
summary(M7$gam)
summary(M7$mer)
gam.vcomp(M6)
Theta
#varsinaiset mallit, joissa theta arvioitu gam-mallin avulla
G1=gamm4(terri ~ year + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G2=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G3=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X)+ year*temp + year*prec + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G4=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*shanG + year*open + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
G5=gamm4(terri ~ SSS + agri5*year + s(Y) + s(X) + year*temp + year*prec + year*shanG + year*open + offset(log(area)), random= ~(1 + year|id), family=negbin(theta=Theta), data=dataS)
pairs.panels(dataS[,c("terri","year","neo","agri5","shan","open","X","Y")])
ggplot(dataS, aes(x=year,y=terri))+ geom_point() + geom_smooth()
pairs.panels(dataS[,c("terri","year","neo","agri5","shanG","open","X","Y")])
#neot tiheydellä, gamm
#neot offsetilla, glmm
#NO1=lme(terri ~ offset(area) + neo + year + X*Y + (1|fyear) + (1|id), family=nbinom2, data=data)
#lag-malli
#NL1=   (terri ~ neo + year + X + Y + (1|fyear) + (1|id), correlation=corAR1(form=~year) family=nbinom2, data=data)
#neot erikseen
N1=glmmTMB(terri ~ neo * year + X * Y + (1|fyear) + (1|id), family=nbinom2, data=dataS)
summary(N1)
knitr::opts_chunk$set(echo = TRUE)
packages<-c("readr","tidyr","plyr","dplyr","magrittr","purrr","data.table","plotrix","jtools","ggplot2","lme4","nlme")
lapply(packages,library,character.only=T)
getwd()
res<-read.csv("results.csv",header=T,sep=",")
str(res)
res$abu_D[res$P_D<10]=NA
res$abu_C[res$P_D<10]=NA
#Compute means and standard errors
res %>% dplyr::select(2:9)%>%colMeans(.,na.rm = T)
res %>% dplyr::select(2:9)%>%std.error()
#kuvaaja
boxplot(res[c(-1,-10)])
abline(h=0)
#aineiston muokkaus:
res_pa=res[,1:5]
res_pa=gather(res_pa,"method","accuracy",2:5)
res_pa$method=as.factor(revalue(res_pa$method,c("pa_A"="A","pa_B"="B","pa_C"="C","pa_D"="D")))
res_pa$pa=as.factor("pa")
res_abu=res[,c(1,6:9)]
res_abu=gather(res_abu,"method","accuracy",2:5)
res_abu$method=as.factor(revalue(res_abu$method,c("abu_A"="A","abu_B"="B","abu_C"="C","abu_D"="D")))
res_abu$pa=as.factor("abu")
res2=rbind(res_pa,res_abu)
str(res2)
summary(res2)
#tallennetaan taulukko, muista, että mukana NA:ta!!
write.csv(res2,"results_with_NA.csv",row.names = F)
ggplot(res2,aes(x=method, y=accuracy))+geom_boxplot()+facet_grid(.~pa)
m0=lm(accuracy~method*pa,data=res2,na.action = "na.exclude")
summary(m0)
drop1(m0,test="F")
E1=rstandard(m0)
F1=fitted(m0)
par(mfrow=c(2,2), mar=c(5,5,2,2))
plot(x=F1,y=E1,xlab="fitted",ylab="residuals",data=res2)
abline(h=0,lty=2)
boxplot(E1~method,xlab="method",ylab="residuals",data=res2)
abline(h=0,lty=2)
boxplot(E1~pa,xlab="pa",ylab="residuals",data=res2)
abline(h=0,lty=2)
par(mfrow=c(1,1), mar=c(5,5,2,2))
boxplot(E1~species,xlab="species",ylab="residuals",data=res2)
abline(h=0,lty=2)
A1=gls(accuracy~method*pa,method="REML",data=res2,na.action="na.exclude")
A2=lme(accuracy~method*pa,random=~1|species,data=res2,method="REML",na.action="na.exclude")
anova(A1,A2)
#muita vaihtoehtoja random-rakenteen testaamiseksi:
#A3=lme(accuracy~method*pa,data=res2,random=~1+method|species,method="REML")
A4=lme(accuracy~method*pa,data=res2,random=~1+pa|species,method="REML",na.action="na.exclude")
#A5=lme(accuracy~method*pa,data=res2,random=~1+method*pa|species,method="REML")
#päätimme jätttää testaamatta todettuamme, etteivät nämä ole kiinnostavia sisänsä
anova(A2,A4)
summary(A2)
anova(A2)
E1=resid(A2, type="normalized")
F1=fitted(A2)
par(mfrow=c(2,2), mar=c(5,5,2,2))
plot(x=F1,y=E1,xlab="fitted",ylab="residuals")
abline(h=0,lty=2)
boxplot(E1~method,xlab="method",ylab="residuals",data=res2)
abline(h=0,lty=2)
boxplot(E1~pa,xlab="pa",ylab="residuals",data=res2)
abline(h=0,lty=2)
par(mfrow=c(1,1), mar=c(5,5,2,2))
boxplot(E1~species,xlab="species",ylab="residuals",data=res2)
abline(h=0,lty=2)
#sama validointi jos olisikin valittu A4:
E1=resid(A4, type="normalized")
F1=fitted(A4)
par(mfrow=c(2,2), mar=c(5,5,2,2))
plot(x=F1,y=E1,xlab="fitted",ylab="residuals")
abline(h=0,lty=2)
boxplot(E1~method,xlab="method",ylab="residuals",data=res2)
abline(h=0,lty=2)
boxplot(E1~pa,xlab="pa",ylab="residuals",data=res2)
abline(h=0,lty=2)
par(mfrow=c(1,1), mar=c(5,5,2,2))
boxplot(E1~species,xlab="species",ylab="residuals",data=res2)
abline(h=0,lty=2)
A2full=lme(accuracy~method*pa,data=res2,random=~1|species,method="ML",na.action="na.exclude")
A2.a=lme(accuracy~method+pa,data=res2,random=~1|species,method="ML",na.action="na.exclude")
A2.b=lme(accuracy~method,data=res2,random=~1|species,method="ML",na.action="na.exclude")
A2.c=lme(accuracy~pa,data=res2,random=~1|species,method="ML",na.action="na.exclude")
anova(A2full,A2.a)
AIC(A2full,A2.a,A2.b,A2.c)
A2full=lme(accuracy~method*pa,data=res2,random=~1|species,method="REML",na.action="na.exclude")
summary(A2full)
plot(A2full)
qqnorm(A2full)
qqnorm(A2full,~ranef(.),col=1)
intervals(A2full)
pwc <- res2 %>%
pairwise_t_test(
accuracy ~ method, paired = TRUE,
p.adjust.method = "bonferroni"
)
install.packages("rstatix")
install.packages("ggpubr")
install.packages("tidyverse")
packages<-c("readr","tidyr","plyr","dplyr","magrittr","purrr","data.table","plotrix","jtools","ggplot2","lme4","nlme","ggpubr","rstatix")
lapply(packages,library,character.only=T)
packages<-c("readr","tidyr","plyr","dplyr","magrittr","purrr","data.table","plotrix","jtools","ggplot2","lme4","nlme","ggpubr","rstatix")
lapply(packages,library,character.only=T)
install.packages("rlang")
packages<-c("readr","tidyr","plyr","dplyr","magrittr","purrr","data.table","plotrix","jtools","ggplot2","lme4","nlme","ggpubr","rstatix")
lapply(packages,library,character.only=T)
install.packages("rlang")
library("rlang", lib.loc="~/R/R-3.6.1/library")
install.packages("rlang")
lapply(packages,library,character.only=T)
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
install.packages(c("BH", "boot", "brglm2", "broom", "callr", "car", "carData", "caTools", "checkmate", "chron", "cli", "covr", "curl", "data.table", "DBI", "deldir", "deSolve", "devtools", "digest", "dplyr", "DT", "e1071", "enrichwith", "FactoMineR", "fansi", "fields", "forcats", "foreach", "foreign", "fs", "geiger", "ggplot2", "ggrepel", "gh", "glmmTMB", "goftest", "hexbin", "Hmisc", "Hmsc", "htmlTable", "igraph", "janitor", "jsonlite", "jtools", "knitr", "lattice", "latticeExtra", "leaps", "lifecycle", "lmerTest", "lpSolveAPI", "magick", "maptools", "MASS", "Matrix", "mcmc", "MCMCpack", "mgcv", "mime", "mnormt", "modelr", "multcomp", "MuMIn", "mvtnorm", "nlme", "nloptr", "nnet", "openxlsx", "pbkrtest", "pillar", "plotrix", "plyr", "polspline", "prettydoc", "prettyunits", "pROC", "processx", "ps", "psych", "quadprog", "quantreg", "R.methodsS3", "R.oo", "R.utils", "R2admb", "R6", "raster", "rasterVis", "Rcpp", "RcppArmadillo", "RcppEigen", "RCurl", "remotes", "rgdal", "RJSONIO", "rlang", "rmarkdown", "rms", "roxygen2", "rsconnect", "rstudioapi", "rversions", "scales", "selectr", "sf", "sp", "spam", "SparseM", "spatialEco", "spatstat", "spatstat.data", "spatstat.utils", "spData", "statmod", "stringi", "subplex", "survival", "testthat", "tidylog", "tidyr", "tidyselect", "tinytex", "TMB", "vctrs", "xfun", "yaImpute", "yaml", "zoo"))
lapply(packages,library,character.only=T)
lapply(packages,library,character.only=T)
pwc <- res2 %>%
pairwise_t_test(
accuracy ~ method, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc
res2 %>%
group_by(method) %>%
get_summary_stats(accuracy, type = "mean_sd")
res2 %>%
group_by(method) %>%
group_by(pa)%>%
get_summary_stats(accuracy, type = "mean_sd")
res2 %>%
group_by_at(method,pa) %>%
get_summary_stats(accuracy, type = "mean_sd")
res2 %>%
group_by_at(vars(method,pa)) %>%
get_summary_stats(accuracy, type = "mean_sd")
res2 %>%
group_by(method,pa)%>%
get_summary_stats(accuracy, type = "mean_sd")
bxp <- ggboxplot(
res2, x = "method", y = "accuracy",
color = "data type", palette = "jco"
)
bxp
res2 %>%
group_by(method,pa)%>%
get_summary_stats(accuracy, type = "mean_sd")
bxp <- ggboxplot(
res2, x = "method", y = "accuracy",
color = "data type", palette = "jco"
)
bxp
bxp <- ggboxplot(
res2, x = "method", y = "accuracy",
color = "method", palette = "jco"
)
bxp
bxp <- ggboxplot(
res2, x = "method", y = "accuracy",
color = "pa", palette = "jco"
)
bxp
res2 %>%
group_by(method,pa) %>%
identify_outliers(accuracy)
res2 %>%
group_by(method,pa) %>%
shapiro_test(accuracy)
ggqqplot(res2, "accuracy", ggtheme = theme_bw()) +
facet_grid(method ~ pa, labeller = "label_both")
res.aov <- anova_test(
data = res2, dv = accuracy, wid = species,
within = c(pa, method)
)
get_anova_table(res.aov)
